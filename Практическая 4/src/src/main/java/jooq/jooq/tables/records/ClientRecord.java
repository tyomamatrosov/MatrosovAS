/*
 * This file is generated by jOOQ.
 */
package jooq.tables.records;


import jooq.tables.Client;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ClientRecord extends UpdatableRecordImpl<ClientRecord> implements Record7<Long, String, String, String, Long, String, Boolean> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.client.client_id</code>.
     */
    public void setClientId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.client.client_id</code>.
     */
    public Long getClientId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.client.full_name</code>.
     */
    public void setFullName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.client.full_name</code>.
     */
    public String getFullName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.client.email</code>.
     */
    public void setEmail(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.client.email</code>.
     */
    public String getEmail() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.client.phone</code>.
     */
    public void setPhone(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.client.phone</code>.
     */
    public String getPhone() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.client.company</code>.
     */
    public void setCompany(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.client.company</code>.
     */
    public Long getCompany() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>public.client.status</code>.
     */
    public void setStatus(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.client.status</code>.
     */
    public String getStatus() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.client.read_only_flag</code>.
     */
    public void setReadOnlyFlag(Boolean value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.client.read_only_flag</code>.
     */
    public Boolean getReadOnlyFlag() {
        return (Boolean) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Long, String, String, String, Long, String, Boolean> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Long, String, String, String, Long, String, Boolean> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Client.CLIENT.CLIENT_ID;
    }

    @Override
    public Field<String> field2() {
        return Client.CLIENT.FULL_NAME;
    }

    @Override
    public Field<String> field3() {
        return Client.CLIENT.EMAIL;
    }

    @Override
    public Field<String> field4() {
        return Client.CLIENT.PHONE;
    }

    @Override
    public Field<Long> field5() {
        return Client.CLIENT.COMPANY;
    }

    @Override
    public Field<String> field6() {
        return Client.CLIENT.STATUS;
    }

    @Override
    public Field<Boolean> field7() {
        return Client.CLIENT.READ_ONLY_FLAG;
    }

    @Override
    public Long component1() {
        return getClientId();
    }

    @Override
    public String component2() {
        return getFullName();
    }

    @Override
    public String component3() {
        return getEmail();
    }

    @Override
    public String component4() {
        return getPhone();
    }

    @Override
    public Long component5() {
        return getCompany();
    }

    @Override
    public String component6() {
        return getStatus();
    }

    @Override
    public Boolean component7() {
        return getReadOnlyFlag();
    }

    @Override
    public Long value1() {
        return getClientId();
    }

    @Override
    public String value2() {
        return getFullName();
    }

    @Override
    public String value3() {
        return getEmail();
    }

    @Override
    public String value4() {
        return getPhone();
    }

    @Override
    public Long value5() {
        return getCompany();
    }

    @Override
    public String value6() {
        return getStatus();
    }

    @Override
    public Boolean value7() {
        return getReadOnlyFlag();
    }

    @Override
    public ClientRecord value1(Long value) {
        setClientId(value);
        return this;
    }

    @Override
    public ClientRecord value2(String value) {
        setFullName(value);
        return this;
    }

    @Override
    public ClientRecord value3(String value) {
        setEmail(value);
        return this;
    }

    @Override
    public ClientRecord value4(String value) {
        setPhone(value);
        return this;
    }

    @Override
    public ClientRecord value5(Long value) {
        setCompany(value);
        return this;
    }

    @Override
    public ClientRecord value6(String value) {
        setStatus(value);
        return this;
    }

    @Override
    public ClientRecord value7(Boolean value) {
        setReadOnlyFlag(value);
        return this;
    }

    @Override
    public ClientRecord values(Long value1, String value2, String value3, String value4, Long value5, String value6, Boolean value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ClientRecord
     */
    public ClientRecord() {
        super(Client.CLIENT);
    }

    /**
     * Create a detached, initialised ClientRecord
     */
    public ClientRecord(Long clientId, String fullName, String email, String phone, Long company, String status, Boolean readOnlyFlag) {
        super(Client.CLIENT);

        setClientId(clientId);
        setFullName(fullName);
        setEmail(email);
        setPhone(phone);
        setCompany(company);
        setStatus(status);
        setReadOnlyFlag(readOnlyFlag);
        resetChangedOnNotNull();
    }
}
