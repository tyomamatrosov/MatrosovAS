/*
 * This file is generated by jOOQ.
 */
package jooq.tables.records;


import jooq.tables.Company;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CompanyRecord extends UpdatableRecordImpl<CompanyRecord> implements Record5<Long, String, String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.company.company_id</code>.
     */
    public void setCompanyId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.company.company_id</code>.
     */
    public Long getCompanyId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.company.company_name</code>.
     */
    public void setCompanyName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.company.company_name</code>.
     */
    public String getCompanyName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.company.email</code>.
     */
    public void setEmail(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.company.email</code>.
     */
    public String getEmail() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.company.phone</code>.
     */
    public void setPhone(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.company.phone</code>.
     */
    public String getPhone() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.company.discription</code>.
     */
    public void setDiscription(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.company.discription</code>.
     */
    public String getDiscription() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, String, String, String, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Long, String, String, String, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Company.COMPANY.COMPANY_ID;
    }

    @Override
    public Field<String> field2() {
        return Company.COMPANY.COMPANY_NAME;
    }

    @Override
    public Field<String> field3() {
        return Company.COMPANY.EMAIL;
    }

    @Override
    public Field<String> field4() {
        return Company.COMPANY.PHONE;
    }

    @Override
    public Field<String> field5() {
        return Company.COMPANY.DISCRIPTION;
    }

    @Override
    public Long component1() {
        return getCompanyId();
    }

    @Override
    public String component2() {
        return getCompanyName();
    }

    @Override
    public String component3() {
        return getEmail();
    }

    @Override
    public String component4() {
        return getPhone();
    }

    @Override
    public String component5() {
        return getDiscription();
    }

    @Override
    public Long value1() {
        return getCompanyId();
    }

    @Override
    public String value2() {
        return getCompanyName();
    }

    @Override
    public String value3() {
        return getEmail();
    }

    @Override
    public String value4() {
        return getPhone();
    }

    @Override
    public String value5() {
        return getDiscription();
    }

    @Override
    public CompanyRecord value1(Long value) {
        setCompanyId(value);
        return this;
    }

    @Override
    public CompanyRecord value2(String value) {
        setCompanyName(value);
        return this;
    }

    @Override
    public CompanyRecord value3(String value) {
        setEmail(value);
        return this;
    }

    @Override
    public CompanyRecord value4(String value) {
        setPhone(value);
        return this;
    }

    @Override
    public CompanyRecord value5(String value) {
        setDiscription(value);
        return this;
    }

    @Override
    public CompanyRecord values(Long value1, String value2, String value3, String value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CompanyRecord
     */
    public CompanyRecord() {
        super(Company.COMPANY);
    }

    /**
     * Create a detached, initialised CompanyRecord
     */
    public CompanyRecord(Long companyId, String companyName, String email, String phone, String discription) {
        super(Company.COMPANY);

        setCompanyId(companyId);
        setCompanyName(companyName);
        setEmail(email);
        setPhone(phone);
        setDiscription(discription);
        resetChangedOnNotNull();
    }
}
