/*
 * This file is generated by jOOQ.
 */
package jooq.tables.records;


import java.time.LocalDateTime;

import jooq.tables.Interactions;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InteractionsRecord extends UpdatableRecordImpl<InteractionsRecord> implements Record5<Long, Long, String, LocalDateTime, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.interactions.interactions_id</code>.
     */
    public void setInteractionsId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.interactions.interactions_id</code>.
     */
    public Long getInteractionsId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.interactions.client_id</code>.
     */
    public void setClientId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.interactions.client_id</code>.
     */
    public Long getClientId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.interactions.type_interactions</code>.
     */
    public void setTypeInteractions(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.interactions.type_interactions</code>.
     */
    public String getTypeInteractions() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.interactions.date</code>.
     */
    public void setDate(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.interactions.date</code>.
     */
    public LocalDateTime getDate() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>public.interactions.notes</code>.
     */
    public void setNotes(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.interactions.notes</code>.
     */
    public String getNotes() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, Long, String, LocalDateTime, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Long, Long, String, LocalDateTime, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Interactions.INTERACTIONS.INTERACTIONS_ID;
    }

    @Override
    public Field<Long> field2() {
        return Interactions.INTERACTIONS.CLIENT_ID;
    }

    @Override
    public Field<String> field3() {
        return Interactions.INTERACTIONS.TYPE_INTERACTIONS;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return Interactions.INTERACTIONS.DATE;
    }

    @Override
    public Field<String> field5() {
        return Interactions.INTERACTIONS.NOTES;
    }

    @Override
    public Long component1() {
        return getInteractionsId();
    }

    @Override
    public Long component2() {
        return getClientId();
    }

    @Override
    public String component3() {
        return getTypeInteractions();
    }

    @Override
    public LocalDateTime component4() {
        return getDate();
    }

    @Override
    public String component5() {
        return getNotes();
    }

    @Override
    public Long value1() {
        return getInteractionsId();
    }

    @Override
    public Long value2() {
        return getClientId();
    }

    @Override
    public String value3() {
        return getTypeInteractions();
    }

    @Override
    public LocalDateTime value4() {
        return getDate();
    }

    @Override
    public String value5() {
        return getNotes();
    }

    @Override
    public InteractionsRecord value1(Long value) {
        setInteractionsId(value);
        return this;
    }

    @Override
    public InteractionsRecord value2(Long value) {
        setClientId(value);
        return this;
    }

    @Override
    public InteractionsRecord value3(String value) {
        setTypeInteractions(value);
        return this;
    }

    @Override
    public InteractionsRecord value4(LocalDateTime value) {
        setDate(value);
        return this;
    }

    @Override
    public InteractionsRecord value5(String value) {
        setNotes(value);
        return this;
    }

    @Override
    public InteractionsRecord values(Long value1, Long value2, String value3, LocalDateTime value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached InteractionsRecord
     */
    public InteractionsRecord() {
        super(Interactions.INTERACTIONS);
    }

    /**
     * Create a detached, initialised InteractionsRecord
     */
    public InteractionsRecord(Long interactionsId, Long clientId, String typeInteractions, LocalDateTime date, String notes) {
        super(Interactions.INTERACTIONS);

        setInteractionsId(interactionsId);
        setClientId(clientId);
        setTypeInteractions(typeInteractions);
        setDate(date);
        setNotes(notes);
        resetChangedOnNotNull();
    }
}
